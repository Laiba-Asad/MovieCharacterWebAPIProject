// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieCharacterWebAPIProject.Data;

#nullable disable

namespace MovieCharacterWebAPIProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CharacterFaction", b =>
                {
                    b.Property<int>("Factionid")
                        .HasColumnType("int");

                    b.Property<int>("charactersCharacterId")
                        .HasColumnType("int");

                    b.HasKey("Factionid", "charactersCharacterId");

                    b.HasIndex("charactersCharacterId");

                    b.ToTable("CharacterFaction");
                });

            modelBuilder.Entity("MovieCharacterWebAPIProject.Models.Backpack", b =>
                {
                    b.Property<int>("backpackid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("backpackid"), 1L, 1);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("backpackid");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Backpacks");
                });

            modelBuilder.Entity("MovieCharacterWebAPIProject.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("MovieCharacterWebAPIProject.Models.Faction", b =>
                {
                    b.Property<int>("Factionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Factionid"), 1L, 1);

                    b.Property<string>("factionname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Factionid");

                    b.ToTable("Faction");
                });

            modelBuilder.Entity("MovieCharacterWebAPIProject.Models.Weapon", b =>
                {
                    b.Property<int>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeaponId"), 1L, 1);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("WeaponName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WeaponId");

                    b.HasIndex("CharacterId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("CharacterFaction", b =>
                {
                    b.HasOne("MovieCharacterWebAPIProject.Models.Faction", null)
                        .WithMany()
                        .HasForeignKey("Factionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieCharacterWebAPIProject.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("charactersCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieCharacterWebAPIProject.Models.Backpack", b =>
                {
                    b.HasOne("MovieCharacterWebAPIProject.Models.Character", "character")
                        .WithOne("backpack")
                        .HasForeignKey("MovieCharacterWebAPIProject.Models.Backpack", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("character");
                });

            modelBuilder.Entity("MovieCharacterWebAPIProject.Models.Weapon", b =>
                {
                    b.HasOne("MovieCharacterWebAPIProject.Models.Character", "character")
                        .WithMany("weapon")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("character");
                });

            modelBuilder.Entity("MovieCharacterWebAPIProject.Models.Character", b =>
                {
                    b.Navigation("backpack")
                        .IsRequired();

                    b.Navigation("weapon");
                });
#pragma warning restore 612, 618
        }
    }
}
